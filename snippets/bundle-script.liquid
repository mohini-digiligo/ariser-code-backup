{% if template.suffix == 'bundle' %}
<script>
document.addEventListener("DOMContentLoaded", function () {
  let selectedSize = "";

  const sizeOptions = document.querySelectorAll(".optoin-Size .variant-input .variant__button-label");
  const preSelectedSizeInput = document.querySelector('.variant-input input[type="radio"][name="Size"][checked]');
  const preSelectedPackInput = document.querySelector('.variant-input input[type="radio"][name="Select Pack"][checked]');

  if (preSelectedSizeInput) {
    const label = document.querySelector(`label[for="${preSelectedSizeInput.id}"]`);
    if (label) {
      label.click(); 
      selectedSize = preSelectedSizeInput.value;
      sizeselectinventory(selectedSize);
    }
  }

  if (preSelectedPackInput) {
    const label = document.querySelector(`label[for="${preSelectedPackInput.id}"]`);
    if (label) {
      label.click(); 
      updateDropdownVisibility();
    }
  }

  sizeOptions.forEach(function (sizeOption) {
    sizeOption.addEventListener("click", function () {
      selectedSize = this.innerText.trim();
      sizeselectinventory(selectedSize);
    });
  });

  function sizeselectinventory(selectedSize) {
    document.querySelectorAll(".custom-dropdown-list-item").forEach(function (item) {
      let displayItem = false;
      const classes = item.className.split(/\s+/);

      classes.forEach(function (className) {
        if (className.includes(selectedSize)) {
          const inventory = parseInt(className.split("-").pop(), 10);
          if (!isNaN(inventory) && inventory >= 5) {
            displayItem = true;
          }
        }
      });

      item.style.display = displayItem ? "" : "none";
    });
  }

  document.querySelectorAll(".custom-dropdown .custom-dropdown-selected").forEach(function (selected) {
    selected.addEventListener("click", function (event) {
      event.stopPropagation();
      closeAllDropdowns();
      let list = this.nextElementSibling;
      if (list && list.classList.contains("custom-dropdown-list")) {
        list.style.display = list.style.display === "block" ? "none" : "block";
      }
    });
  });

  document.querySelectorAll('input[data-option-name="Select Pack"]').forEach(function (radio) {
    radio.addEventListener("change", updateDropdownVisibility);
  });

  document.addEventListener("click", closeAllDropdowns);

  document.querySelectorAll(".custom-dropdown-list-item").forEach(function (item) {
    item.addEventListener("click", function () {
      const value = this.getAttribute("data-value");
      const parentDropdown = this.closest(".color-select-dropdwon");
      const prev = this.getAttribute("data-prev");
      const dropdownId = parentDropdown.id;

      updateSelection(dropdownId, value, this.innerHTML, this.querySelector("img"), prev);
    });
  });

  function updateSelection(dropdownId, value, text, optionImage, prev) {
    const selectElement = document.querySelector(`#${dropdownId} select`);
    const selectedSpan = document.querySelector(`#${dropdownId} .custom-dropdown-selected`);

    selectElement.value = value;

    updateDisplayedValue(selectedSpan, text, optionImage, prev);
  }

  function updateDisplayedValue(selectedSpan, text, optionImage, prev) {
    let textContainer = selectedSpan.querySelector(".text-container") || createTextContainer(selectedSpan);

    let tempDiv = document.createElement("div");
    tempDiv.innerHTML = text;
    textContainer.innerText = tempDiv.innerText;

    if (optionImage) {
      const selectedImage = selectedSpan.querySelector(".selected-image");
      if (selectedImage) {
        selectedImage.src = optionImage.src;
        selectedImage.classList.remove("hidden");
      }
    }

    document.querySelectorAll(".product-image-main img").forEach((img) => {
      img.srcset = prev;
    });

    closeAllDropdowns();
  }

  function createTextContainer(span) {
    const container = document.createElement("span");
    container.className = "text-container";
    span.appendChild(container);
    return container;
  }

  function updateDropdownVisibility() {
    let qty = document.querySelector('input[data-option-name="Select Pack"]:checked')?.getAttribute("data-qty");
    qty = parseInt(qty, 10) || 0;

    document.querySelectorAll(".color-select-dropdwon").forEach((dropdown, index) => {
      if (index < qty) {
        dropdown.style.display = "flex";
        dropdown.classList.add("show");
      } else {
        dropdown.style.display = "none";
        dropdown.classList.remove("show");
      }
    });
  }

  function closeAllDropdowns() {
    document.querySelectorAll(".custom-dropdown-list").forEach((list) => {
      list.style.display = "none";
    });
  }

  const addToCartButton = document.querySelector(".add-to-cart");
  if (addToCartButton) {
    addToCartButton.addEventListener("click", async function (e) {
      e.preventDefault();
      addToCartButton.classList.add("btn--loading");

      const productsToAdd = [];
      const dropdowns = document.querySelectorAll(".bundle-custom .show select");

      for (const selectElement of dropdowns) {
        const selectedOption = selectElement.options[selectElement.selectedIndex];
        const handle = selectedOption.getAttribute("data-handle");
        const value = selectedOption.value;
        const dropdownId = selectElement.closest(".color-select-dropdwon")?.id || "";

        if (handle && value) {
          try {
            const variantId = await fetchProductVariantIdByHandle(handle, [value]);
            if (variantId) {
              productsToAdd.push({
                id: variantId,
                quantity: 1,
                properties: {
                  "Item Type": "Pack",
                  "Bundle Dropdown": dropdownId,
                },
              });
            }
          } catch (err) {
            console.error("Error fetching variant:", err);
          }
        }
      }

      if (productsToAdd.length > 0) {
        try {
          await addProductsToCart(productsToAdd);
          updateCartUI();
        } catch (error) {
          console.error("Error adding to cart:", error);
        }
      } else {
        console.error("No products selected.");
      }

      addToCartButton.classList.remove("btn--loading");
    });
  }

  async function addProductsToCart(products) {
    const response = await fetch(window.Shopify.routes.root + "cart/add.js", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ items: products }),
    });
    return await response.json();
  }

  async function fetchProductVariantIdByHandle(handle, options) {
    const res = await fetch(`/products/${handle}.json`);
    const data = await res.json();
    const variants = data.product.variants;

    const match = variants.find((variant) =>
      options.every((opt, i) => variant[`option${i + 1}`] === opt)
    );

    return match ? match.id : null;
  }

  function updateCartUI() {
    theme.cart
      .getCart()
      .then((cart) => {
        document.dispatchEvent(new CustomEvent("ajaxProduct:added"));
      })
      .catch((err) => console.error("Cart UI update failed:", err));
  }
});
</script>
{% endif %}
