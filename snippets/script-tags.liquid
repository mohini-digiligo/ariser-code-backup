<script>
  window.addEventListener("load", function() {
    window.__sfWindowLoaded = true
  })
</script>

<script>
{%- if template.name == 'index' -%}
  function __lightOrDark(color) {
    var lightness = Number((color.match(/^hsl.*,(.*)%\)/) || ['', '100'])[1].trim());
    return lightness > 50 ? 'light' : 'dark';
  }
  __detectBgSections = function () {
    try {
      var sections = document.querySelectorAll('[data-bg]')
      for (var i = 0; i < sections.length; i++) {
        var section = sections[i]
        var lightness = __lightOrDark(section.dataset.bg)
        section.classList.add('bg-' + lightness)
      }
    } catch (error) {
      console.error("Failed to __detectBgSections.", error)
    }
  }
  __detectBgSections();
{%- endif -%}

{%- if request.design_mode -%}
window.addEventListener('shopify:section:load', function (e) {
  {%- if template.name == 'index' -%}
    __detectBgSections();
  {%- endif -%}
})
{%- endif -%}

// Fixed: Largest Contentful Paint image was lazily loaded
const first_image = document.querySelector('#MainContent .shopify-section img');
if (first_image) first_image.removeAttribute('loading');

// Fixed: Largest Contentful Paint image on product page
{% if template.name == 'product' %}
  let checkConfig = setInterval(() => {
    const config = MinimogTheme.config
    if (config) {
      clearInterval(checkConfig)
      const mediaDesktop = document.querySelector('.sf-product-media__desktop')
      const first_image_media = mediaDesktop.querySelector('img');
      if (config.mqlMobile) {
        if (first_image_media) first_image_media.setAttribute('loading', 'lazy')
      } else {
        if (first_image_media) first_image_media.removeAttribute('loading')
      }
    }
  }, 100)
{% endif %}
</script>

<script>
  var fader = document.querySelector('.sf-page-transition')
  function __fadeInPage() {
		if (!window.AnimationEvent || !fader) return;
		
    // Page transition
    window.addEventListener('beforeunload', () => {
      fader.classList.add('fade-in');
    });
    window.addEventListener('DOMContentLoaded', () => {
      document.documentElement.classList.remove('overflow-hidden')
		  document.body.classList.remove('overflow-hidden')

      fader.classList.remove('fade-in')
      fader.classList.add('fade-out')

      document.dispatchEvent(new CustomEvent('page:loaded'));
    });
    window.addEventListener('pageshow', (event) => {
      // Removes unload class when returning to page via history
      if (event.persisted) {
        fader.classList.remove('fade-in')
        fader.classList.add('fade-out')
      }
    });
	}

  __fadeInPage()
</script>